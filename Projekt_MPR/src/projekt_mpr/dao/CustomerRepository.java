package projekt_mpr.dao;

import java.sql.*;
import java.util.ArrayList;

import projekt_mpr.domain.Customer;


public class CustomerRepository {
	Connection connection;
	private String createTableSql = "CREATE TABLE customers("
			+"id INT GENERATED BY DEFAULT AS IDENTITY, "
			+"name VARCHAR(20), "
			+"surname VARCHAR(30), "
			+"address VARCHAR(50)" 
			+")";
	private String insertSql = "INSERT INTO customers(name, surname, address) VALUES(?,?,?)";
	private String updateSql = "UPDATE customers SET (name, surname, address)=(?,?,?) WHERE id=?";
	private String deleteSql = "DELETE FROM customers WHERE id=?";
	private String selectAllSql = "SELECT * FROM customers";
	
	private Statement createTable;
	private PreparedStatement insert;
	private PreparedStatement update;
	private PreparedStatement delete;
	private PreparedStatement selectAll;

	public CustomerRepository() {
		try {
			connection = DriverManager.getConnection("jdbc:hsqldb:hsql://localhost/workdb");
			createTable = connection.createStatement();
			insert = connection.prepareStatement(insertSql);
			update = connection.prepareStatement(updateSql);
			delete = connection.prepareStatement(deleteSql);
			selectAll = connection.prepareStatement(selectAllSql);
		} catch (SQLException e) {
			System.err.println("Something went wrong durring connecting!");
			e.printStackTrace();
		}
	}
	public ArrayList<Customer> getAll(){
		ArrayList<Customer> result = new ArrayList<Customer>();
		try {
			ResultSet rs = selectAll.executeQuery();
			while(rs.next()) {
				Customer c = new Customer();
				c.setId(rs.getInt("id"));
				c.setName(rs.getString("name"));
				c.setSurname(rs.getString("surname"));
				c.setAddress(rs.getString("address"));
				result.add(c);
			}
		} catch (SQLException e) {
			System.err.println("Something went wrong durring printing all customers!");
			e.printStackTrace();
		}
		
		return result;
	}
	public void update(Customer customer) {
		try {
			update.setString(1, customer.getName());
			update.setString(2, customer.getSurname());
			update.setString(3, customer.getAddress());
			update.setInt(4, customer.getId());
		} catch (SQLException e) {
			System.err.println("Something went wrong during update customer procedure.");
			e.printStackTrace();
		}

		
	}
	public void insert(Customer customer) {
		try {
			insert.setString(1, customer.getName());
			insert.setString(2, customer.getSurname());
			insert.setString(3, customer.getAddress());
		} catch (SQLException e) {
			System.err.println("Something went wrong during insert into customer procedure.");
			e.printStackTrace();
		}
	}
	public void delete(Customer customer) {
		try {
			delete.setInt(1, customer.getId());
			delete.executeUpdate();
		} catch (SQLException e) {
			System.err.println("Something went wrong during delete customer procedure.");
			e.printStackTrace();
		}
	}
	public void createTable() {
		boolean tableExist = false;
		try {
			ResultSet rs = connection.getMetaData().getTables(null, null, null, null);
			while(rs.next()) {
				if(rs.getString("TABLE_NAME").equalsIgnoreCase("customers")) {
					tableExist = true;
					break;
				}
			}
			if(!tableExist) {
				createTable.executeUpdate(createTableSql);
			}
		} catch (SQLException e) {
			System.err.println("Something went wrong during creating customers table!");
			e.printStackTrace();
		}
	}

}
